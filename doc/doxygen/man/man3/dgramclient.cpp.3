.TH "C++/dgramclient.cpp" 3 "Sat Mar 2 2013" "libsocket" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C++/dgramclient.cpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include <string>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include '\&.\&./headers/exception\&.hpp'\fP
.br
\fC#include '\&.\&./headers/dgramclient\&.hpp'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "dgram_client_socket & \fBlibsocket::operator>>\fP (dgram_client_socket &sock, string &dest)"
.br
.ti -1c
.RI "dgram_client_socket & \fBlibsocket::operator<<\fP (dgram_client_socket &sock, const char *str)"
.br
.ti -1c
.RI "dgram_client_socket & \fBlibsocket::operator<<\fP (dgram_client_socket &sock, string &str)"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBdgramclient\&.cpp\fP contains the class dgram_client_socket\&. This class provides the read/write functions for connected datagram sockets (alias client dgram sockets\&.\&.\&.)\&. This helps to avoid writing the same code more than one time\&. The client datagram classes for specific domains which are unix_dgram_client and inet_dgram_client inherit the functions declared here to get the ability to send and receive data via connected datagram sockets\&. It is not possible to use a class which has this functions also for stream sockets because the functions have to check if the socket is connected (bool connected)\&. In the stream classes, this check is realized by checking if the file descriptor is -1 or not\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for libsocket from the source code\&.
